// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace RH.Pedidos.Data.Migrations
{
    [DbContext(typeof(PedidosContext))]
    partial class PedidosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence<int>("MinhaSequencia")
                .StartsAt(1000L);

            modelBuilder.Entity("RH.Pedidos.Domain.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("clienteId");

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo")
                        .HasDefaultValueSql("NEXT VALUE FOR MinhaSequencia");

                    b.Property<DateTime?>("DataAutorizacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_autorizacao");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_cadastro");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_conclusao");

                    b.Property<int>("PedidoStatus")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("RH.Pedidos.Domain.PedidoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("PedidoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("pedido_id");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("produto_id");

                    b.Property<string>("ProdutoNome")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("produto_nome");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_unitario");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("PedidoItems");
                });

            modelBuilder.Entity("RH.Pedidos.Domain.Pedido", b =>
                {
                    b.OwnsOne("RH.Pedidos.Domain.Endereco", "EnderecoEntrega", b1 =>
                        {
                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("bairro");

                            b1.Property<string>("Cep")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("cep");

                            b1.Property<string>("Cidade")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("cidade");

                            b1.Property<string>("Complemento")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("complemento");

                            b1.Property<string>("Estado")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("estado");

                            b1.Property<string>("Logradouro")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("logradouro");

                            b1.Property<string>("Numero")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("numero");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("EnderecoEntrega");
                });

            modelBuilder.Entity("RH.Pedidos.Domain.PedidoItem", b =>
                {
                    b.HasOne("RH.Pedidos.Domain.Pedido", "Pedido")
                        .WithMany("PedidoItems")
                        .HasForeignKey("PedidoId")
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("RH.Pedidos.Domain.Pedido", b =>
                {
                    b.Navigation("PedidoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
